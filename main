//Student Name: Joshua Curry
//Teacher: Dr. Tyson McMillan
//Date: 04/13/2021
//A program to practice working with multi-dimensional arrays

#include <iostream>
#include <string>
#include "Input_Validation_Extended.h"

using namespace std;

/*
Research Input data: go to http://www.weather.com
Pick two cities of your choice. Fill in the temperature for the 7 days of this week of both cities. Fill in this text data table, which will be used in your program.

Seattle = 1, Tokyo = 2

Data Table
City X, Day X: Temp

City 1, Day 1: 39F
City 1, Day 2: 40F
City 1, Day 3: 42F
City 1, Day 4: 44F
City 1, Day 5: 46F
City 1, Day 6: 47F
City 1, Day 7: 46F

City 2, Day 1: 61F
City 2, Day 2: 45F
City 2, Day 3: 49F
City 2, Day 4: 56F
City 2, Day 5: 57F
City 2, Day 6: 48F
City 2, Day 7: 50F
*/

int main()

{

    const int CITY = 2;
    const int DAY = 7;
    double temperature[CITY][DAY];

    //Note your input data from the above

    cout << "Enter all temperature for a week of first city and then second city. \n";

    // Inserting the values into the temperature array note for every dimension of the array you need a for loop 2 dimensions = 2 for loops */

    for (int i = 0; i < CITY; ++i)
    {
        for(int j = 0; j < DAY; ++j)
        {
            cout << "City " << i + 1 << ", Day " << j + 1 << " : ";
            temperature[i][j] = validateDouble(temperature[i][j]);
        }
    }

    cout << "\n\nDisplaying Values:\n";

    // Accessing the values from the temperature array

    for (int i = 0; i < CITY; ++i)
    {
        for(int j = 0; j < DAY; ++j)
        {
            cout << "City " << i + 1 << ", Day " << j + 1 << " = " << temperature[i][j] << endl;
        }
    }

    //       *****For up to 5 Points Extra Credit, Expand this program*****

    //1. Create a one dimensional array, cityOne[7] to store the 7 temperatures of city 1, assume that value 0 represents day 1, 1 represents day 2.... */

    double cityOne[DAY];

    cout << "\nEnter the weather for Seattle this week\n" << endl;

    for(int i = 0; i < DAY; i++)
    {
      cout << "Day " << i + 1 << ": ";
      cityOne[i] = validateDouble(cityOne[i]);
    }
    
    for (int i = 0; i < DAY; i++)
    {
      cout << "\nWeather for Seattle on day " << i << " is " << cityOne[i] << " degrees F";
    }

    //2. Create a on dimensional array, cityTwo[7] to store the 7 temperatures of city 2 , assume that value 0 represents day 1, 1 represents day 2.... */


    double cityTwo[DAY];

    cout << "\n\nEnter the weather for Tokyo this week\n" << endl;

    for(int i = 0; i < DAY; i++)
    {
      cout << "Day " << i + 1 << ": ";
      cityTwo[i] = validateDouble(cityTwo[i]);
    }

    for(int i = 0; i < DAY; i++)
    {
      cout << "\nWeather in Tokyo on day " << i + 1 << " is " << cityTwo[i] << " degrees F";
    }

    //3. Using a for loop (or nested for loop), feed the data of CityOne[] and CityTwo[] into temperature[i][j], where i is index of the City Number, and j is the index of the temp for the day. */

    cout << endl;

    // for each city
    for(int i = 0; i < CITY; i++)
    {
      // cityOne <=> i=0
      if (i == 0)
      {
        // for each day
        for(int j = 0; j < DAY; j++)
        {
          temperature[i][j] = cityOne[j];
          //cout << "\nWeather in Seattle on day " << j + 1 << " is " << temperature[i][j] << " degrees F";
        } // closing j
      } // closing i

      // cityTwo <=> i=1
      if (i == 1)
      {
        // for each day
        for(int j = 0; j < DAY; j++)
        {
          temperature[i][j] = cityTwo[j];
          //cout << "\nWeather in Tokyo on day " << j + 1 << " is " << temperature[i][j] << " degrees F";
        } // closing j
      } // closing i

    }
  

    //4. print the results of temperature[i][j]; to the screen.

    // for each day
    for(int j = 0; j < DAY; j++)
    {
      cout << "\nTemperature on day " << j + 1 << " was ";

      // for each city
      for(int i = 0; i < CITY; i++)
      {
         cout << temperature[i][j] << " in city " << i + 1;

         if(i < CITY-1)
         {
           cout << " and ";
         }
      } // closing i
    } // closing j

    return 0;

} // closing main
